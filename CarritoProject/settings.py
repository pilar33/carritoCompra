"""
Django settings for CarritoProject project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os, inspect
from pathlib import Path
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y&&gn^cr4e($^c100m%xpx%dh8=@_8^b9h2v79t0^8)m1gufy('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# usando variables de entorno de clever cloud
# Configuración de DEBUG
# DEBUG = os.getenv("DJANGO_DEBUG", "False") == "True"

# # Configuración de ALLOWED_HOSTS
# ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "").split(",")

WHITENOISE_MANIFEST_STRICT = False

# Application definition

INSTALLED_APPS = [
    'crispy_forms',
    'crispy_bootstrap5', 
     # General use templates & template tags (should appear first)
    'adminlte3',
     # Optional: Django admin theme (must be before django.contrib.admin)
    'adminlte3_theme',
    'django.contrib.contenttypes',   
    'django.contrib.admin',
    'django.contrib.auth',      
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_bootstrap5',
    'CarritoApp',
    'loguinApp',
    'cajas',
    'clientesApp',
    'sucursalesApp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CarritoProject.urls'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),
                 #Path(TEMPLATE_DIR_DATATB),
                ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'CarritoApp.context_processor.total_carrito',
            ],
        },
    },
]

WSGI_APPLICATION = 'CarritoProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'bdnzqvijsum929kbagyw', #'restauranteryr', 
#         'USER': 'uaglois5ophr2fxg', #'root'
#         'PASSWORD': '1LugfTVZsSzC2KIvVYkI', #'',
#         #'SERVER': 'localhost',
#         'HOST': 'bdnzqvijsum929kbagyw-mysql.services.clever-cloud.com',
#         'PORT': '3306',
#         # 'OPTIONS': {
#         #     'init_command': "SET sql_mode='STRICT_ALL_TABLES'",
#         # },
#     }
# }

if os.getenv('DATABASE_URL'):
    DATABASES = {
        'default': dj_database_url.config(default=os.getenv("DATABASE_URL"))
    }
else:
    DATABASES = {
        'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'restauranteryr', 
        'USER': 'root',
        'PASSWORD': '',
        'SERVER': 'localhost',        
        'PORT': '3306',
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_ALL_TABLES'",
        # },
    }
}

# Configuración de la base de datos usando DATABASE_URL del entorno de clever cloud
# DATABASES = {
#     'default': dj_database_url.config(default=os.getenv("DATABASE_URL"))
# }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Buenos_Aires'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/' # La URL raíz para servir archivos estáticos

STATICFILES_DIRS = [
    Path(BASE_DIR) / "static",  # Directorio de archivos estáticos del proyecto principal
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_REDIRECT_URL='Home'
LOGOUT_REDIRECT_URL='Home'
LOGIN_URL='login'

#para permitir la carga de modal en iframe
X_FRAME_OPTIONS = 'SAMEORIGIN'
